import socket
import builtwith
from Wappalyzer import Wappalyzer, WebPage
import subprocess

def get_ip_address(domain):
    try:
        ip = socket.gethostbyname(domain)
        return ip
    except socket.gaierror:
        return None

def get_technologies(domain):
    try:
        webpage = WebPage.new_from_url(f"http://{domain}")
        wappalyzer = Wappalyzer.latest()
        technologies = wappalyzer.analyze(webpage)
        return technologies
    except Exception as e:
        return None

def get_cms(domain):
    try:
        tech_info = builtwith.parse(f"http://{domain}")
        cms = tech_info.get('cms', None)
        return cms
    except Exception as e:
        return None

def search_exploits(cms):
    try:
        search_term = cms[0] if cms else 'CMS'
        result = subprocess.check_output(['searchsploit', search_term], encoding='utf-8')
        return result
    except subprocess.CalledProcessError as e:
        return None

def main():
    domain = input("Enter the website domain: ")

    print("\n[+] Identifying IP Address...")
    ip = get_ip_address(domain)
    if ip:
        print(f"IP Address: {ip}")
    else:
        print("Failed to retrieve IP address")

    print("\n[+] Identifying Technologies...")
    technologies = get_technologies(domain)
    if technologies:
        print("Technologies Used:")
        for tech in technologies:
            print(f"- {tech}")
    else:
        print("Failed to identify technologies")

    print("\n[+] Identifying CMS...")
    cms = get_cms(domain)
    if cms:
        print(f"CMS: {cms}")
    else:
        print("Failed to identify CMS")

    if cms:
        print("\n[+] Searching for Available Exploits...")
        exploits = search_exploits(cms)
        if exploits:
            print(f"Available Exploits:\n{exploits}")
        else:
            print("No exploits found or failed to search")
    else:
        print("\nNo CMS identified, skipping exploit search")

if __name__ == "__main__":
    main()
  
